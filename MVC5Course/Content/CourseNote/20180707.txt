Model

資料模型(Model)
描述資料的一種形式
    XML
    Class
    Table Schema - Column
    Custom Format - JSON

View Model
針對某一張頁面所設計的 Model(Class)

Entity Framework 
edmx 是很重要
(本身就是一份 XML 檔)

.tt - 程式碼產生器(範本)

※前端所有的資訊對 Server 端 來說都是不可靠的，所以驗證的撰寫應該是以
Server 端為優先，有時間可以再來處理前端的驗證

Ctrl + . == Alt + Enter

參數中若是有中括號表示不必填

SqlException → 資料庫回吐的錯訊

透過 ViewModel 建立 View 時請將精靈提供的 data context class 刪除
畢竟 ViewModel 不屬於edmx 裡面所擁有的Model


View Model
針對某一張頁面所設計的 Model

ORM (Object-relational mapping)
O 物件(Class)
R 關連資料表(Db內的Table Column)
M 

ORM → 模型轉換

POCO → 用最簡單且無負擔的方式表達資料模型 例如 Products.cs
可當 DTO 使用 → 序列化、反序列化(轉JSON)

Model 要肥 - 商業邏輯、資料有效性、資料存取  
Controller 要輕 - 控制流程的角色
View 夠笨 - 呈現資料


EFGeneratePartialClass.tt
自動產生 MetadataType 的 T4 程式碼範本
有新的 Table Column
對此 tt 檔案按右鍵 點 執行自定工具它不會對現有的Model進行動作



Request → Router(路由) 比對網址的結構找到對應的 Controller → New 出 Controller
執行 Action (被執行且需要傳入資料) → Model Binding → 驗證每一筆 資料驗證 → 
執行模型驗證 →  









